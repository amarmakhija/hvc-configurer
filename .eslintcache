[{"C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\index.tsx":"1","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\Body.tsx":"2","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\costExtimate\\CostExtimate.tsx":"3","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\storage\\Storage.tsx":"4","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\review\\Review.tsx":"5","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\storage\\bandwidth.tsx":"6","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\configureSecurity\\ExistingSecurity.tsx":"7","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\review\\ReviewSecurity.tsx":"8","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\configureSecurity\\ConfigureSecurityItem.tsx":"9","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\header\\Header.tsx":"10","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\image\\Image.tsx":"11","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\image\\tabs\\Tabs.tsx":"12","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\image\\box.tsx":"13","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\instance\\Instance.tsx":"14","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\configureSecurity\\ConfigureSecurity.tsx":"15","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\image\\BoxItem.tsx":"16","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\storage\\StorageItem.tsx":"17","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\instance\\AllPurpose.tsx":"18","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\configureSecurity\\SecurityConfig.tsx":"19","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\review\\ReviewStorage.tsx":"20"},{"size":500,"mtime":1607007936490,"results":"21","hashOfConfig":"22"},{"size":2791,"mtime":1607315685906,"results":"23","hashOfConfig":"22"},{"size":3553,"mtime":1607315685906,"results":"24","hashOfConfig":"22"},{"size":2145,"mtime":1607319355205,"results":"25","hashOfConfig":"22"},{"size":4692,"mtime":1607319239648,"results":"26","hashOfConfig":"22"},{"size":1437,"mtime":1607289467748,"results":"27","hashOfConfig":"22"},{"size":3039,"mtime":1607318664393,"results":"28","hashOfConfig":"22"},{"size":2650,"mtime":1607268941557,"results":"29","hashOfConfig":"22"},{"size":4420,"mtime":1607315685906,"results":"30","hashOfConfig":"22"},{"size":785,"mtime":1607010292143,"results":"31","hashOfConfig":"22"},{"size":4201,"mtime":1607277085524,"results":"32","hashOfConfig":"22"},{"size":4000,"mtime":1607319686201,"results":"33","hashOfConfig":"22"},{"size":1177,"mtime":1607282545273,"results":"34","hashOfConfig":"22"},{"size":7171,"mtime":1607319765674,"results":"35","hashOfConfig":"22"},{"size":2383,"mtime":1607307708629,"results":"36","hashOfConfig":"22"},{"size":2176,"mtime":1607310054278,"results":"37","hashOfConfig":"22"},{"size":5631,"mtime":1607315685906,"results":"38","hashOfConfig":"22"},{"size":3049,"mtime":1607319381979,"results":"39","hashOfConfig":"22"},{"size":2146,"mtime":1607318984254,"results":"40","hashOfConfig":"22"},{"size":3200,"mtime":1607268860463,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"e7nemu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"44"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"44"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"44"},"C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\index.tsx",[],[],"C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\Body.tsx",["103","104","105","106","107","108","109","110"],"import React, { useEffect,useState,useRef } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Image from './image/Image';\r\nimport CostExtimate from './costExtimate/CostExtimate';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }),\r\n);\r\n//<Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\r\nexport default function Body() {\r\n    const classes = useStyles();\r\n    const[costExtimate,setCostimate] = React.useState({});\r\n    const[core,setCore] = React.useState('');\r\n    const[memory,setMemory] = React.useState('');\r\n    const[instance,setInstance] = React.useState('');\r\n    const[itemList,setItemList] = React.useState([{key:0,type:\"SSD\",volume:\"root\",capacity:\"120\",encryption:true,iops:\"500\",backup:true,remark:\"\"}])\r\n    const[bandwidth,setBandwidth] = React.useState(0);\r\n    const [securityName,setSecurityName] = React.useState('');\r\n    const[ruleList,setRuleList] = React.useState([{key:0,type:\"\",pro:\"\",portRange:\"\",source:\"\",des:\"\"}]);\r\n    const setExtimate = (event:any,obj:any) =>{\r\n        setCostimate(obj);\r\n    }\r\n    const deleteItem = (item:any) =>{\r\n      const copyItemList = itemList.filter((val:any) => val.key !== item.key);\r\n      setItemList(copyItemList)\r\n      console.log(\"itemList\",itemList)\r\n      console.log(item);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={9}>\r\n          <Paper className={classes.paper} style={{ backgroundColor: '#DCDCDC'}} ><Image imageData={costExtimate}\r\n          core = {core} memory = {memory} \r\n           costExtimate = {setExtimate} setCore = {setCore} setMemory = {setMemory} \r\n           instance ={instance} setInstance = {setInstance} itemList = {itemList} setItemList = {setItemList}\r\n           bandwidth = {bandwidth} setBandwidth = {setBandwidth} securityName = {securityName} \r\n           setSecurityName={setSecurityName} ruleList = {ruleList} setRuleList={setRuleList} deleteItem={deleteItem}/></Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className={classes.paper}><CostExtimate data={costExtimate} core ={core} memory={ memory}  bandwidth= {bandwidth} itemList={itemList} /></Paper>\r\n        </Grid>\r\n      </Grid>\r\n      </Container>\r\n    </React.Fragment>   \r\n    )\r\n}\r\n","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\costExtimate\\CostExtimate.tsx",["111","112","113","114","115"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }),\r\n);\r\nfunction getImagePrice(server:string): number{\r\n    if(!server){\r\n      return 0;\r\n    }\r\n    switch(server){\r\n        case \"Linux 2 Image\":\r\n            return 243.61;\r\n        case \"Ubuntu Server 18.04 LTS\":\r\n            return 222.54;\r\n        case \"Red Hat Enterprise Linux 8\":\r\n            return 300.00;\r\n        case \"Microsoft Window Server 2019 Base\":\r\n            return 338.77;\r\n        case \"SUSE Linux Enterprise Server\":\r\n            return 200.22;\r\n        default:\r\n          return 0;\r\n    }  \r\n}\r\nfunction getCpuPrice(cpu:string): number{\r\n  if(!cpu){\r\n    return 0;\r\n  }\r\n  switch(cpu){\r\n      case \"32GB\":\r\n          return 20;\r\n      case \"64GB\":\r\n          return 40;\r\n      default:\r\n        return 0;\r\n  }  \r\n}\r\n\r\nfunction getCorePrice(core:string): number{\r\n  if(!core){\r\n    return 0;\r\n  }\r\n  switch(core){\r\n      case \"8 core\":\r\n          return 20;\r\n      case \"16 core\":\r\n          return 40;\r\n      default:\r\n          return 0;\r\n  }  \r\n}\r\nfunction getBandWidthValue(val:number):number{\r\n  if(val<=1){\r\n    return 5;\r\n  }else if(val>1 && val<=2){\r\n    return 10;\r\n  }else{\r\n    return 0;\r\n  }\r\n}\r\nfunction add(a: number, b: number,c: number,d: number,e:number): number {\r\n  return a + b + c + d + e;\r\n}\r\nfunction getStorageValue(itemList:any):number{\r\n  // {key:0,type:\"SSD\",volume:\"root\",capacity:\"120\",encryption:true,iops:\"500\",backup:true,remark:\"\"\r\n  //{key: key, type:\"SSD\",volume:\"ext\",capacity:\"120\",encryption:true,iops:\"600\",backup:true,remark:\"\"}\r\n  if(!itemList){\r\n    return 0;\r\n  }\r\n  let sum=0;\r\n  itemList.forEach((item:any)=>{\r\n      if(item.volume === \"ext\"){\r\n        sum += item.type === \"SSD\" ? 40 : 20;\r\n      }\r\n  })\r\n  return sum;\r\n}\r\nexport default function CostExtimate(props:any) {\r\n    const classes = useStyles();\r\n    const {data,core,memory,bandwidth,itemList} = props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n            <p>Cost Extimation:</p>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {data.title?\"server\":null}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {data.title?data.title:null}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            {core?\"core\":null}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {core?core:null}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            {memory?\"memory\":null}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {memory?memory:null}\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm={6}>\r\n            {bandwidth?\"bandwidth\":null}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {bandwidth?bandwidth:null}\r\n          </Grid>\r\n          \r\n          <Grid item xs={6} sm={6}>\r\n            {data.title?\"Price\":null}\r\n          </Grid>\r\n          <Grid item xs={6} sm={6}>\r\n            {data.title?\"$\"+ add(getImagePrice(data.title),getCorePrice(core),getCpuPrice(memory),getStorageValue(itemList),getBandWidthValue(bandwidth)) + \"/mo\":null}\r\n          </Grid>\r\n         </Grid>\r\n      </div>\r\n    );\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\storage\\Storage.tsx",["116","117","118","119","120","121","122","123"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport StorageItem from './StorageItem'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Bandwidth from './bandwidth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function Storage(props:any){\r\n    const {instance,itemList, setItemList,bandwidth,setBandwidth,deleteItem} = props;\r\n    const classes = useStyles();\r\n    const [key,setKey] = React.useState(1);\r\n    const addNewStorageItem = (event:any) =>{\r\n        const item = {key: key, type:\"SSD\",volume:\"ext\",capacity:\"120\",encryption:true,iops:\"600\",backup:true,remark:\"\"};\r\n        setItemList(itemList.concat(item));\r\n        const tempKey= key +1;\r\n        setKey(tempKey);\r\n    }\r\n    const updateItem = (item:any) =>{\r\n      const copyItemList = itemList.map((val:any)=>{\r\n        if(val.key === item.key){\r\n          val=item;\r\n        }\r\n        return val;\r\n      })\r\n      setItemList(copyItemList); \r\n    }\r\n    const updateBandWidth = (item:number) =>{\r\n      const copyBandwidth = item;\r\n      setBandwidth(copyBandwidth); \r\n    }\r\n\r\n    return(\r\n        \r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n            <div className={classes.root}>\r\n                {itemList.map((item:any)  => <StorageItem key={item.key} item={item} updateItem = {updateItem} deleteItem={deleteItem} />)}\r\n                <Button variant=\"contained\" color=\"primary\" onClick= {addNewStorageItem}>\r\n                    Add Volume\r\n                </Button>\r\n            </div>\r\n            </Grid>\r\n            <Grid item xs ={12}>\r\n                <Grid item xs={4}>\r\n                <p><b>Network Bandwidth Configuration</b></p>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Bandwidth instance = {instance} bandwidth = {bandwidth} setBandwidth = {setBandwidth} upDateBandWidth = {updateBandWidth}/> \r\n            \r\n        </Grid>\r\n        \r\n    )\r\n} ","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\review\\Review.tsx",["124","125","126","127","128","129","130","131","132","133"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ReviewStorage from './ReviewStorage';\r\nimport ReviewSecurity from './ReviewSecurity';\r\nimport { Button } from '@material-ui/core';\r\nimport BorderAllIcon from '@material-ui/icons/BorderAll';\r\nexport default function Review(props:any){\r\n    const {imageData,selectedBit,core,memory,instance,bandwidth,itemList,ruleList,setValue} =props;\r\n    console.log(imageData);\r\n    console.log(selectedBit);\r\n    return(\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={2}>Image</Grid>\r\n            <Grid item xs={8}></Grid>\r\n            <Grid item xs={2}><Button style={{backgroundColor:'#D3D3D3'}} onClick = {(event) => setValue(0)} >edit</Button></Grid>\r\n            <Grid item xs={12}>\r\n                  <Divider/>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <BorderAllIcon style={{ fontSize: 80 , color:\"secondary\"} }/>\r\n            </Grid>\r\n\r\n            <Grid item xs={8}>\r\n                <h3>{imageData.title}</h3>\r\n                <h4>{imageData.desc}</h4>\r\n            </Grid>\r\n\r\n            <Grid item xs={3}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\"></FormLabel>\r\n                <RadioGroup aria-label=\"\" name=\"\" value={selectedBit}>\r\n                    {imageData.radio1 ? <FormControlLabel value={imageData.radio1} control={<Radio />} label={imageData.radio1} /> : null}\r\n                    {imageData.radio2 ? <FormControlLabel value={imageData.radio2} control={<Radio />} label={imageData.radio2} /> : null}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Divider/>\r\n            </Grid>\r\n            <Grid item xs={2}>Instance</Grid>\r\n            <Grid item xs={2}></Grid>\r\n            <Grid item xs={2}><Button style={{backgroundColor:'#D3D3D3'}} onClick = {(event) => setValue(1)} >edit</Button></Grid>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={12}>\r\n                <Divider/>\r\n            </Grid>\r\n            \r\n            <Grid item xs={3}>{instance}</Grid>\r\n            <Grid item xs={5}></Grid>\r\n            <Grid item xs={4}></Grid>\r\n\r\n            <Grid item xs={2}>Core</Grid>\r\n            <Grid item xs={2}>{core}</Grid>\r\n            <Grid item xs={4}></Grid>\r\n            <Grid item xs={4}></Grid>\r\n\r\n            <Grid item xs={2}>Memory</Grid>\r\n            <Grid item xs={2}>{memory}</Grid>\r\n            <Grid item xs={4}></Grid>\r\n            <Grid item xs={4}></Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Divider/>\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>BandWidth</Grid>\r\n            <Grid item xs={2}></Grid>\r\n            <Grid item xs={2}><Button style={{backgroundColor:'#D3D3D3'}} onClick = {(event) => setValue(2)} >edit</Button></Grid>\r\n            <Grid item xs={6}></Grid>\r\n\r\n            <Grid item xs={2}>{bandwidth}TB/Month</Grid>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={4}></Grid>\r\n            \r\n            <Grid item xs={12}>\r\n                <Divider/>\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>Storage</Grid>\r\n            <Grid item xs={2}></Grid>\r\n            <Grid item xs={2}><Button style={{backgroundColor:'#D3D3D3'}} onClick = {(event) => setValue(2)} >edit</Button></Grid>\r\n            <Grid item xs={6}></Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Divider/>\r\n            </Grid>\r\n            {itemList.map((item:any)  => <ReviewStorage key= {item.key} storage={item}/>)}\r\n            <Grid item xs={2}>Security</Grid>\r\n            <Grid item xs={2}></Grid>\r\n            <Grid item xs={2}><Button style={{backgroundColor:'#D3D3D3'}} onClick = {(event) => setValue(3)} >edit</Button></Grid>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={12}>\r\n                <Divider/>\r\n            </Grid>\r\n            {ruleList.map((item:any) => <ReviewSecurity key={item.key} rule={item}/>)}\r\n\r\n            <Grid item xs={4}>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            </Grid>\r\n            <Grid item xs={2}></Grid>\r\n            <Grid item xs={2}>\r\n                 <Button style={{backgroundColor:'#7CFC00'}} onClick={() => { alert('Instance Launched') }}>Launch</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\storage\\bandwidth.tsx",["134","135","136"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 300,\r\n    },\r\n    margin: {\r\n      height: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nconst bandwitdth = [\r\n    {\r\n      value: 0.5,\r\n      label: '512 GB',\r\n    },\r\n    {\r\n      value: 1,\r\n      label: '1 TB',\r\n    },\r\n    {\r\n      value: 2,\r\n      label: '2 TB',\r\n    },\r\n  ];\r\nexport default function Bandwidth(props:any){\r\n    const classes = useStyles();\r\n    const {instance,bandwidth,setBandwidth,upDateBandWidth} = props;\r\n    function valuetext(value: number) {\r\n        setBandwidth(value as number);\r\n        upDateBandWidth(value as number);\r\n        console.log(bandwidth);\r\n        return `${value}`;\r\n      }\r\n      console.log(bandwidth);\r\n    return(\r\n    <div className={classes.root}>\r\n      <Typography id=\"discrete-slider-custom\" gutterBottom>\r\n        Outbound Traffic\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={0.5}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider-custom\"\r\n        step={0.5}\r\n        valueLabelDisplay=\"auto\"\r\n        marks = {bandwitdth}\r\n        min = {0.5}\r\n        max = { instance === \"Network Optimised\" ? 1 :2}\r\n      />\r\n    </div>\r\n    )\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\configureSecurity\\ExistingSecurity.tsx",["137","138","139","140","141"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Grid } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\nconst exisitingSecurityGroup = [{securityName: \"SG1\",type:\"HTTPS\",protocol:\"TCP\",PortRange:\"443\",Source:\"1.1.1.1\",Description:\"sg1\"},\r\n                                    {securityName: \"SG2\",type:\"SSH\",protocol:\"TCP\",PortRange:\"22\",Source:\"2.2.2.2\",Description:\"sg2\"},\r\n                                    {securityName: \"SG3\",type:\"SMTP\",protocol:\"TCP\",PortRange:\"25\",Source:\"3.3.3.3\",Description:\"sg3\"},\r\n                                    {securityName: \"SG4\",type:\"HTTPS\",protocol:\"TCP\",PortRange:\"443\",Source:\"1.1.1.1\",Description:\"sg1\"},\r\n                                    {securityName: \"SG5\",type:\"SSH\",protocol:\"TCP\",PortRange:\"22\",Source:\"2.2.2.2\",Description:\"sg2\"},\r\n                                    {securityName: \"SG6\",type:\"SMTP\",protocol:\"TCP\",PortRange:\"25\",Source:\"3.3.3.3\",Description:\"sg3\"},\r\n                               ]\r\nexport default function ExistingSecurity(props:any){\r\n    const classes = useStyles();\r\n    const{securityName,setSecurityName,ruleList,setRuleList} = props;\r\n    const [existingSecurityOption,setExistingSecurityOption] = React.useState('');\r\n    const handleTypeChange = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n        const securityName = event.target.value as string;\r\n        setExistingSecurityOption(securityName)\r\n        const obj = exisitingSecurityGroup.filter(item=>item.securityName === securityName)\r\n        setSecurityName(securityName);\r\n        setRuleList(obj);\r\n      }\r\n    return(\r\n        <div>\r\n            <Grid container spacing={3}>\r\n                <Grid item xl={12}>Select Security Group</Grid>\r\n                <Grid item xl={6}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\"></InputLabel>\r\n                        <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        onChange={handleTypeChange}\r\n                        value={existingSecurityOption}\r\n                        >\r\n                        {exisitingSecurityGroup.map((item) => (\r\n                            <MenuItem key={item.securityName} value={item.securityName}>{item.securityName}</MenuItem>\r\n                        ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\review\\ReviewSecurity.tsx",["142","143","144"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }),\r\n);\r\nfunction GridHeader(){\r\n    return (<><Grid item xs={3}>\r\n              <p>Type</p>\r\n          </Grid><Grid item xs={2}>\r\n              <p>Protocol</p>\r\n          </Grid><Grid item xs={2}>\r\n              <p>Port Range</p>\r\n          </Grid> <Grid item xs={2}>\r\n              <p>Source</p>\r\n          </Grid> <Grid item xs={3}>\r\n              <p>Description</p>\r\n          </Grid></>\r\n    )\r\n}\r\nexport default function ReviewSecurity(props:any){\r\n  const classes = useStyles();\r\n  const{rule} = props;\r\n  return(\r\n    <div>\r\n      <Grid container spacing={3}>\r\n            {GridHeader()}\r\n            <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={rule.type}\r\n              >\r\n                <MenuItem value={rule.type}>{rule.type}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              </Grid><Grid item xs={2}>\r\n              <TextField id=\"standard-disabled\" label=\"protocol\" value= {rule.pro}/>\r\n            </Grid><Grid item xs={2}>\r\n              <TextField id=\"standard-disabled\" label=\"portRange\" value= {rule.portRange}/>\r\n            </Grid> <Grid item xs={2}>\r\n              <TextField id=\"standard-disabled\" label=\"source\" value= {rule.source} />\r\n            </Grid><Grid item xs={3}>\r\n              <TextField id=\"standard-disabled\" label=\"des\" value= {rule.des} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <Divider/>\r\n          </Grid>\r\n          </Grid>\r\n    </div>\r\n  )\r\n}",[],"C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\configureSecurity\\ConfigureSecurityItem.tsx",["145","146","147"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }),\r\n);\r\nfunction GridHeader(){\r\n    return (<><Grid item xs={3}>\r\n              <p>Type</p>\r\n          </Grid><Grid item xs={2}>\r\n              <p>Protocol</p>\r\n          </Grid><Grid item xs={2}>\r\n              <p>Port Range</p>\r\n          </Grid> <Grid item xs={2}>\r\n              <p>Source</p>\r\n          </Grid> <Grid item xs={3}>\r\n              <p>Description</p>\r\n          </Grid></>\r\n    )\r\n}\r\nexport default function ConfigureSecurityItem(props:any){\r\n  const classes = useStyles();\r\n  const[rule,setRule] = React.useState(props.item);\r\n  const{updateItem} = props;\r\n  const getPortRange = (type:string) =>{\r\n    let portRange = \"\";\r\n      if(type === \"HTTPS\"){\r\n        portRange = \"443\"\r\n      }else if(type === \"SSH\"){\r\n        portRange = \"22\"\r\n      }else{\r\n        portRange = \"25\"\r\n      }\r\n      return portRange;\r\n  }\r\n  const handleTypeChange = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n    const type = event.target.value as string\r\n    const copyRule = {...rule};\r\n    copyRule.type = event.target.value as string\r\n    copyRule.pro = \"TCP\"\r\n    copyRule.portRange = getPortRange(type);\r\n    setRule(copyRule);\r\n    updateItem(copyRule);\r\n    console.log(copyRule);\r\n  }\r\n  const handleProtocol = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n    const copyRule = {...rule};\r\n    copyRule.pro = event.target.value as string\r\n    setRule(copyRule);\r\n    updateItem(copyRule);\r\n    console.log(copyRule);\r\n  }\r\n\r\n  const handlePortRange = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n    const copyRule = {...rule};\r\n    copyRule.portRange = event.target.value as string\r\n    setRule(copyRule);\r\n    updateItem(copyRule);\r\n    console.log(copyRule);\r\n  }\r\n\r\n  const handleSource = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n    const copyRule = {...rule};\r\n    copyRule.source = event.target.value as string\r\n    setRule(copyRule);\r\n    updateItem(copyRule);\r\n    console.log(copyRule);\r\n  }\r\n\r\n  const handleDescription = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n    const copyRule = {...rule};\r\n    copyRule.des = event.target.value as string\r\n    setRule(copyRule);\r\n    updateItem(copyRule);\r\n    console.log(copyRule);\r\n  }\r\n \r\n  return(\r\n    <div>\r\n      <Grid container spacing={3}>\r\n            {GridHeader()}\r\n            <Grid item xs={3}>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={rule.type}\r\n                onChange={handleTypeChange}\r\n              >\r\n                <MenuItem value={\"HTTPS\"}>HTTPS</MenuItem>\r\n                <MenuItem value={\"SSH\"}>SSH</MenuItem>\r\n                <MenuItem value={\"SMTP\"}>SMTP</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              </Grid><Grid item xs={2}>\r\n              <TextField id=\"standard-basic\" label=\"\" value= {rule.pro} onChange={handleProtocol}/>\r\n            </Grid><Grid item xs={2}>\r\n              <TextField id=\"standard-basic\" label=\"\" value= {rule.portRange} onChange={handlePortRange}/>\r\n            </Grid> <Grid item xs={2}>\r\n              <TextField id=\"standard-basic\" label=\"\" value= {rule.source} onChange={handleSource}/>\r\n            </Grid><Grid item xs={3}>\r\n              <TextField id=\"standard-basic\" label=\"\" value= {rule.des} onChange={handleDescription}/>\r\n          </Grid>\r\n          </Grid>\r\n    </div>\r\n  )\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\header\\Header.tsx",["148"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }),\r\n);\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>HVC</Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>   \r\n    )\r\n}\r\n","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\image\\Image.tsx",["149","150","151"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport ImageTab from './tabs/Tabs';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }),\r\n);\r\nconst dataWithWindow = [{\r\n  title : \"Linux 2 Image\",\r\n  desc : \"Linux 2 comes with 5 year of support.It provide linux karnel 4.14 turned for optimal Performance.\",\r\n  radio1 : \"64-bit(x86)\",\r\n  radio2 : \"64-bit(ARM)\"\r\n},\r\n{\r\n  title : \"Ubuntu Server 18.04 LTS\",\r\n  desc : \"Linux 2 comes with 5 year of support.It provide linux karnel 4.14 turned for optimal Performance.\",\r\n  radio1 : \"64-bit(x86)\",\r\n  radio2 : \"64-bit(ARM)\"\r\n},\r\n{\r\n  title : \"Red Hat Enterprise Linux 8\",\r\n  desc : \"Linux 2 comes with 5 year of support.It provide linux karnel 4.14 turned for optimal Performance.\",\r\n  radio1 : \"64-bit(x86)\",\r\n  radio2 : \"64-bit(ARM)\"\r\n},\r\n{\r\n  title : \"Microsoft Window Server 2019 Base\",\r\n  desc : \"Microsoft comes with 5 year of support..\",\r\n  radio1 : \"64-bit(ARM)\",\r\n},\r\n{\r\n  title : \"SUSE Linux Enterprise Server\",\r\n  desc : \"Linux 2 comes with 5 year of support.It provide linux karnel 4.14 turned for optimal Performance.\",\r\n  radio1 : \"64-bit(x86)\",\r\n  radio2 : \"64-bit(ARM)\"\r\n},\r\n];\r\nexport default function Image(props:any) {\r\n    const classes = useStyles();\r\n    const [region, setRegion] = React.useState('');\r\n    const[data,setData] = React.useState([{}]);\r\n    const{imageData,core,memory,costExtimate,setCore,setMemory,instance,setInstance ,itemList ,setItemList,bandwidth,setBandwidth,securityName,setSecurityName,ruleList,setRuleList,deleteItem} = props;\r\n    const dataWithoutWindow = dataWithWindow.filter(item=>item.title!==\"Microsoft Window Server 2019 Base\");\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setRegion(event.target.value as string);\r\n        if(event.target.value === 'us-east-1' || event.target.value === 'us-east-2'){\r\n            setData(dataWithWindow);\r\n        }else{\r\n            setData(dataWithoutWindow);\r\n        }\r\n      };\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          \r\n          <Grid item xs={6} sm={4}>\r\n            <h1>Choose Configuration</h1>\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            \r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n          <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Region</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\" \r\n                value={region}\r\n                onChange={handleChange}\r\n                >\r\n                    <MenuItem value={\"us-east-1\"}>us-east-1</MenuItem>\r\n                    <MenuItem value={\"us-east-2\"}>us-east-2</MenuItem>\r\n                    <MenuItem value={\"us-west-1\"}>us-west-1</MenuItem>\r\n                    <MenuItem value={\"india-1\"}>india-1</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n            <ImageTab imageData = {imageData} core = {core} memory = {memory} data = {data} setData = {costExtimate} setCore = {setCore} setMemory = {setMemory} \r\n            instance ={instance} setInstance = {setInstance} itemList = {itemList} setItemList = {setItemList}\r\n            bandwidth = {bandwidth} setBandwidth = {setBandwidth} securityName = {securityName} \r\n            setSecurityName={setSecurityName} ruleList = {ruleList} setRuleList={setRuleList} deleteItem={deleteItem}\r\n            />\r\n      </div>\r\n    );\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\image\\tabs\\Tabs.tsx",["152","153","154","155","156","157","158"],"import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CustomCard from '../box';\r\nimport Instance from '../../instance/Instance';\r\nimport Storage from '../../storage/Storage';\r\nimport ConfigureSecurity from '../../configureSecurity/ConfigureSecurity';\r\nimport Review from '../../review/Review';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ImageTab(props:any) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const[selectedBit,setSelectedBit] = React.useState('')\r\n  const [securityGroup,setSecurityGroup] = React.useState('');\r\n  const {imageData,core,memory,data,setData,setCore,setMemory,\r\n    instance,setInstance,itemList,setItemList,\r\n    bandwidth,setBandwidth,securityName,\r\n    setSecurityName,ruleList,setRuleList,deleteItem} = props;\r\n  console.log(imageData);\r\n  const handleChange = (event: any, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs value={value} onChange={handleChange} variant=\"scrollable\"\r\n          scrollButtons=\"on\"indicatorColor=\"primary\" textColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n          <Tab label=\"Choose Image\" {...a11yProps(0)} />\r\n          <Tab label=\"Choose Instance\"  {...a11yProps(1)} />\r\n          <Tab label=\"Choose Storage and Network\"  {...a11yProps(2)} />\r\n          <Tab label=\"Configure Security\"  {...a11yProps(3)} />\r\n          <Tab label=\"Review and Lunch\"  {...a11yProps(4)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <CustomCard data={data} setData = {setData} imageData={imageData} selectedBit = {selectedBit} setSelectedBit = {setSelectedBit}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Instance instance ={instance} core = {core} memory = {memory} setCore = {setCore} setMemory = {setMemory} setInstance = {setInstance} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Storage instance ={instance} itemList = {itemList} setItemList = {setItemList} bandwidth = {bandwidth} setBandwidth = {setBandwidth} deleteItem={deleteItem}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <ConfigureSecurity securityName = {securityName} setSecurityName={setSecurityName} ruleList = {ruleList} \r\n        setRuleList={setRuleList}  securityGroup={securityGroup} setSecurityGroup={setSecurityGroup} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}> \r\n           <Review imageData = {imageData} selectedBit = {selectedBit} core = {core} memory = {memory} instance= {instance}\r\n                    bandwidth = {bandwidth} itemList = {itemList} securityName = {securityName} ruleList = {ruleList}\r\n                    setValue ={setValue}\r\n           />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\image\\box.tsx",["159","160","161","162"],"import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport BoxItem from './BoxItem'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }),\r\n);\r\n\r\n\r\n\r\nexport default function CustomCard(props:any){\r\n\r\n    const classes = useStyles();\r\n    const {data,setData,selectedBit,setSelectedBit,imageData} =props;        \r\n    console.log(\"imageData\",imageData);\r\n    return (\r\n        <Box color=\"text.primary\">\r\n            <div className={classes.root}>\r\n                {data.map((item:any)=>{\r\n                  return imageData && imageData.title && item.title ===imageData.title ?\r\n                  (<BoxItem obj = {item} setObject= {setData} selectedBit = {selectedBit} setSelectedBit = {setSelectedBit} />)\r\n                  :(<BoxItem obj = {item} setObject= {setData} selectedBit ='' setSelectedBit = {setSelectedBit} />)\r\n                })}\r\n             </div>\r\n        </Box>\r\n    );\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\instance\\Instance.tsx",["163","164","165","166","167","168","169"],"import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AllPurposeInstance from './AllPurpose';\r\n\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n      id: `scrollable-force-tab-${index}`,\r\n      'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  const useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }));\r\nfunction getValue(val:string){\r\n    if(val){\r\n      if(val===\"General Purpose\"){\r\n          return 0;\r\n      }else if(val===\"Cpu Optimised\"){\r\n        return 1;\r\n      }\r\n      else if(val === \"Storage Optimised\"){\r\n          return 2;\r\n      }else{\r\n          return 3;\r\n      }\r\n    }else{\r\n      return 0;\r\n    }\r\n}\r\nexport default function Instance(props:any){\r\n    const classes = useStyles();\r\n    const{instance,core,memory,setCore,setMemory,setInstance} = props;\r\n    const [value, setValue] = React.useState(getValue(instance));\r\n    console.log(instance);\r\n    console.log(core);\r\n    console.log(memory);\r\n    const handleChange = (event: any, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n    const section = {generalPurpose :{ availCore : [{key:\"1\",value:\"1 core\"},{key:\"2\",value:\"2 core\"},{key:\"4\",value:\"4 core\"}],\r\n                            availMemory : [{key:\"256MB\",value:\"256MB\"},{key:\"512MB\",value:\"512MB\"},{key:\"1GB\",value:\"1GB\"},{key:\"2GB\",value:\"2GB\"},{key:\"4GB\",value:\"4GB\"}] \r\n                          },\r\n                    cpuOptimised : {availCore : [{key:\"1\",value:\"1 core\"},{key:\"8\",value:\"8 core\"},{key:\"16\",value:\"16 core\"}],\r\n                          availMemory : [{key:\"16GB\",value:\"16GB\"},{key:\"32GB\",value:\"32GB\"},{key:\"64GB\",value:\"64GB\"}] \r\n                        },\r\n                    storageOptimised : {availCore : [{key:\"1\",value:\"1 core\"},{key:\"2\",value:\"2 core\"},{key:\"8\",value:\"8 core\"},{key:\"16\",value:\"16 core\"}],\r\n                            availMemory : [{key:\"16GB\",value:\"16GB\"},{key:\"32GB\",value:\"32GB\"},{key:\"64GB\",value:\"64GB\"}] \r\n                          },\r\n                    networkOptimised :{availCore : [{key:\"1\",value:\"1 core\"},{key:\"2\",value:\"2 core\"},{key:\"4\",value:\"4 core\"},{key:\"8\",value:\"8 core\"},{key:\"16\",value:\"16 core\"}],\r\n                        availMemory : [{key:\"256MB\",value:\"256MB\"},{key:\"512MB\",value:\"512MB\"},{key:\"1GB\",value:\"1GB\"},{key:\"2GB\",value:\"2GB\"},{key:\"4GB\",value:\"4GB\"},{key:\"16GB\",value:\"16GB\"},{key:\"32GB\",value:\"32GB\"},{key:\"64GB\",value:\"64GB\"}] \r\n                      }\r\n                    }\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs value={value} onChange={handleChange} variant=\"scrollable\"\r\n            scrollButtons=\"on\"indicatorColor=\"primary\" textColor=\"primary\"\r\n            aria-label=\"scrollable force tabs example\"\r\n          >\r\n            <Tab label=\"General Purpose\" {...a11yProps(0)} />\r\n            <Tab label=\"Cpu Optimised\"  {...a11yProps(1)} />\r\n            <Tab label=\"Storage Optimised\"  {...a11yProps(2)} />\r\n            <Tab label=\"Network Optimised\"  {...a11yProps(3)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={value} index={0}>\r\n                {core && memory && instance && instance===\"General Purpose\"   ?\r\n               <AllPurposeInstance instance ={instance} core = {core} memory = {memory} data=\"General Purpose\" \r\n               setInstance = {setInstance} availCores = {section.generalPurpose.availCore} \r\n               availMemory = {section.generalPurpose.availMemory} setParentCore = {setCore} setParentMemory = {setMemory} />:\r\n               <AllPurposeInstance instance ='' core = '' memory = '' data=\"General Purpose\" \r\n               setInstance = {setInstance} availCores = {section.generalPurpose.availCore} \r\n               availMemory = {section.generalPurpose.availMemory} setParentCore = {setCore} setParentMemory = {setMemory} /> \r\n               }\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n        {core && memory && instance && instance===\"Cpu Optimised\"?\r\n            <AllPurposeInstance instance ={instance} core = {core} memory = {memory} data=\"Cpu Optimised\" \r\n            setInstance = {setInstance} availCores = {section.cpuOptimised.availCore}\r\n             availMemory = {section.cpuOptimised.availMemory} setParentCore = {setCore} setParentMemory = {setMemory}/>:\r\n             <AllPurposeInstance instance ='' core = '' memory = '' data=\"Cpu Optimised\" \r\n            setInstance = {setInstance} availCores = {section.cpuOptimised.availCore}\r\n             availMemory = {section.cpuOptimised.availMemory} setParentCore = {setCore} setParentMemory = {setMemory}/>}\r\n        </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n          {core && memory && instance && instance===\"Storage Optimised\"?\r\n              <AllPurposeInstance instance ={instance} core = {core} memory = {memory} data=\"Storage Optimised\" \r\n              setInstance = {setInstance} availCores = {section.storageOptimised.availCore} \r\n              availMemory = {section.storageOptimised.availMemory} setParentCore = {setCore} setParentMemory = {setMemory}/>:\r\n              <AllPurposeInstance instance ='' core = '' memory = '' data=\"Storage Optimised\" \r\n              setInstance = {setInstance} availCores = {section.storageOptimised.availCore} \r\n              availMemory = {section.storageOptimised.availMemory} setParentCore = {setCore} setParentMemory = {setMemory}/>}\r\n          </TabPanel>\r\n        <TabPanel value={value} index={3}>\r\n        {core && memory && instance && instance===\"Network Optimised\"?\r\n            <AllPurposeInstance instance ={instance} core = {core} memory = {memory} data=\"Network Optimised\" \r\n            setInstance = {setInstance} availCores = {section.networkOptimised.availCore} \r\n            availMemory = {section.networkOptimised.availMemory} setParentCore = {setCore} setParentMemory = {setMemory}/>:\r\n            <AllPurposeInstance instance ='' core = '' memory = '' data=\"Network Optimised\" \r\n            setInstance = {setInstance} availCores = {section.networkOptimised.availCore} \r\n            availMemory = {section.networkOptimised.availMemory} setParentCore = {setCore} setParentMemory = {setMemory}/>}\r\n        </TabPanel>\r\n      </div>\r\n    );  \r\n  \r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\configureSecurity\\ConfigureSecurity.tsx",["170","171","172"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport ExistingSecurity from './ExistingSecurity';\r\nimport SecurityConfig from './SecurityConfig';\r\n\r\nexport default function ConfigureSecurity(props:any){\r\n    const {securityName,setSecurityName,ruleList,setRuleList,securityGroup,setSecurityGroup} = props;\r\n    const handleSecurityGroupChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setSecurityGroup(event.target.value as string);\r\n        console.log(event.target.value);\r\n      };\r\n    return (\r\n\r\n        <Grid container spacing={3}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\"></FormLabel>\r\n                <RadioGroup aria-label=\"\" name=\"\" value={securityGroup} onChange={handleSecurityGroupChange}>\r\n                    <Grid item xl={12} xs={12}>\r\n                        <FormControlLabel value=\"Upload New Security Group\" control={<Radio />} label=\"Upload New Security Group\"/> \r\n                    </Grid>\r\n                    <Grid item xl={12} xs={12}></Grid>\r\n                    <Grid item xl={12} xs={12}>\r\n                        <FormControlLabel value=\"Select Existing Security Group\" control={<Radio />} label=\"Select Existing Security Group\" />\r\n                    </Grid> \r\n                </RadioGroup>\r\n             \r\n                <Grid item xl={12}></Grid>\r\n            <Grid item xl={12}>\r\n                   {securityGroup === \"Select Existing Security Group\" ?\r\n                        <ExistingSecurity securityName = {securityName} \r\n                        setSecurityName={setSecurityName} ruleList = {ruleList} setRuleList={setRuleList} /> \r\n                    :\r\n                   securityGroup ===\"Upload New Security Group\"  ?\r\n                        <SecurityConfig securityName = {securityName} \r\n                        setSecurityName={setSecurityName} ruleList = {ruleList} setRuleList={setRuleList} />\r\n                    :null\r\n                    }\r\n                       \r\n            </Grid>\r\n             </FormControl>\r\n        </Grid>\r\n    )\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\image\\BoxItem.tsx",["173","174","175","176"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { Button } from '@material-ui/core';\r\nimport BorderAllTwoToneIcon from '@material-ui/icons/BorderAll';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.primary,\r\n    },\r\n  }),\r\n);\r\nexport default function  BoxItem(props:any){\r\n    const [value,setValue] = React.useState(props.selectedBit);\r\n    const {obj,setObject,setSelectedBit} = props;\r\n    console.log(props.selectedBit);\r\n    \r\n    const handleRadioChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setValue(event.target.value as string);\r\n        setSelectedBit(event.target.value as string);\r\n      };\r\n    return (\r\n        <Grid container spacing={3}>\r\n        <Grid item xs={1}>\r\n          {obj.title?<BorderAllTwoToneIcon style={{ fontSize: 80 , color:\"primary\"} }/>:null}\r\n        </Grid>\r\n\r\n        <Grid item xs={8}>\r\n            <h3>{obj.title}</h3>\r\n            <h4>{obj.desc}</h4>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n        <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\"></FormLabel>\r\n            <RadioGroup aria-label=\"\" name=\"\" value={value} onChange={handleRadioChange}>\r\n                {obj.radio1 ? <FormControlLabel value={obj.radio1} control={<Radio />} label={obj.radio1} /> : null}\r\n                {obj.radio2 ? <FormControlLabel value={obj.radio2} control={<Radio />} label={obj.radio2} /> : null}\r\n            </RadioGroup>\r\n            {obj.title?<Button style={{backgroundColor:'#0000FF'}}onClick = {(event) => setObject(event,obj)} >click</Button>:null}\r\n        </FormControl>\r\n        </Grid>\r\n  </Grid>\r\n    );\r\n}\r\n","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\storage\\StorageItem.tsx",["177","178","179","180","181"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }),\r\n);\r\nfunction GridHeader(){\r\n    return (<><Grid item xs={2}>\r\n           <p>type</p>\r\n        </Grid><Grid item xs={2}>\r\n            <p>Volume</p>\r\n        </Grid><Grid item xs={2}>\r\n            <p>Capacity</p>\r\n        </Grid><Grid item xs={1}>\r\n            <p>Encryption</p>\r\n        </Grid><Grid item xs={1}>\r\n            <p>IOPS</p>\r\n        </Grid><Grid item xs={1}>\r\n            <p>Backup Required</p>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n            <p>Remarks</p>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n            <p>Delete</p>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\nexport default function  StoraageItem(props:any){\r\n\r\n    const classes = useStyles();\r\n    const{updateItem,deleteItem} = props;\r\n    const[storage,setStorage] = React.useState(props.item)    \r\n    const deleteItemEvent = (event:any) =>{\r\n      deleteItem(storage);\r\n    }\r\n    const handleTypeChange = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n      const copyStorage = {...storage};\r\n      copyStorage.type = event.target.value as string\r\n      setStorage(copyStorage);\r\n      updateItem(copyStorage);\r\n      console.log(copyStorage);\r\n    }\r\n\r\n    const getIopsValue =(capacity:number) =>{\r\n      let iops = 0;\r\n      if(capacity<100){\r\n        iops = 100;\r\n      }else if(capacity>=100 && capacity<=500){\r\n        iops = 500;\r\n      }else{\r\n        iops = 1000;\r\n      }\r\n      return iops;\r\n    }\r\n    const handleStorageCapacity = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n      const copyStorage = {...storage};\r\n      const capacity = event.target.value as number;\r\n      copyStorage.capacity = capacity;\r\n      copyStorage.iops = getIopsValue(capacity);\r\n      setStorage(copyStorage);\r\n      updateItem(copyStorage);\r\n      console.log(copyStorage);\r\n    }\r\n\r\n    const handleRemark = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n      const copyStorage = {...storage};\r\n      copyStorage.remark = event.target.value as string;\r\n      setStorage(copyStorage);\r\n      updateItem(copyStorage);\r\n      console.log(copyStorage);\r\n    }\r\n    const handleEncyrption = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const copyStorage = {...storage};\r\n      copyStorage.encryption = event.target.checked;\r\n      updateItem(copyStorage);\r\n      setStorage(copyStorage);\r\n    };\r\n    const handleBackup = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const copyStorage = {...storage};\r\n      copyStorage.backup = event.target.checked;\r\n      updateItem(copyStorage);\r\n      setStorage(copyStorage);\r\n    };\r\n\r\n    \r\n    return (\r\n        <Grid container spacing={3}>\r\n\r\n          \r\n            {GridHeader()}\r\n            <Grid item xs={2}>\r\n              \r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={storage.type}\r\n                onChange={handleTypeChange}\r\n              >\r\n                <MenuItem value={\"SSD\"}>SSD</MenuItem>\r\n                <MenuItem value={\"magnetic disk\"}>magnetic disk</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <p>{storage.volume}</p>\r\n            </Grid><Grid item xs={2}>\r\n                <TextField id=\"standard-basic\" label=\"\" value= {storage.capacity} onChange={handleStorageCapacity}/>\r\n            </Grid><Grid item xs={1}>\r\n              <Checkbox\r\n                checked={storage.encryption}\r\n                onChange={handleEncyrption}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n            </Grid><Grid item xs={1}>\r\n                <p>{storage.iops}</p>\r\n            </Grid><Grid item xs={1}>\r\n              <Checkbox\r\n                checked={storage.backup}\r\n                onChange={handleBackup}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField id=\"standard-basic\" label=\"rating\" value= {storage.remark} onChange={handleRemark}/>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <IconButton aria-label=\"delete\" className={classes.margin} onClick={deleteItemEvent}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <hr/>    \r\n        </Grid>\r\n    );\r\n}\r\n","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\instance\\AllPurpose.tsx",["182","183","184","185","186"],"import React from 'react';\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }),\r\n);\r\n\r\nexport default function AllPurposeInstance(props:any){\r\n    const{data,setInstance,availCores,availMemory,setParentCore,setParentMemory} = props;\r\n    setInstance(data);\r\n    const classes = useStyles();\r\n    const [cores, setCores] = React.useState(props.core);\r\n    const [memory, setMemory] = React.useState(props.memory);\r\n\r\n    const handleCoreChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setCores(event.target.value as string);\r\n        setParentCore(event.target.value as string)\r\n      };\r\n      const handleMemoryChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setMemory(event.target.value as string);\r\n        setParentMemory(event.target.value as string)\r\n      };\r\n    return(\r\n        <div>\r\n            <Grid container spacing={8}>\r\n          \r\n            <Grid item xs={2} sm={12}>\r\n                 <h1>Choose Configuration - {data}</h1>\r\n            </Grid>\r\n\r\n            <Grid item xs={6} sm={6}>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"core-label\">Cores</InputLabel>\r\n                    <Select\r\n                    labelId=\"core-label\"\r\n                    id=\"core\"\r\n                    value={cores}\r\n                    onChange={handleCoreChange}\r\n                    >\r\n                    {availCores.map((item:any) =>(\r\n                        <MenuItem key={item.key} value={item.value}>{item.value}</MenuItem>\r\n                    ))}\r\n                        \r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6}>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"memory-label\">Memory</InputLabel>\r\n                    <Select\r\n                    labelId=\"memory-label\"\r\n                    id=\"memory\"\r\n                    value={memory}\r\n                    onChange={handleMemoryChange}\r\n                    >\r\n                      {availMemory.map((item:any) =>(\r\n                        <MenuItem key={item.key} value={item.value}>{item.value}</MenuItem>\r\n                    ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n    );\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\configureSecurity\\SecurityConfig.tsx",["187","188","189","190","191","192","193","194"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ConfigureSecurityItem from './ConfigureSecurityItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }),\r\n);\r\nexport default function SecurityConfig(props:any){\r\n    const classes = useStyles();\r\n    const{securityName,setSecurityName,ruleList,setRuleList} = props;\r\n    const[key,setKey] = React.useState(1);\r\n    const addNewStorageItem = (event:any) =>{\r\n        const item = {key:key,type:\"\",pro:\"\",portRange:\"\",source:\"\",des:\"\"}\r\n        setRuleList(ruleList.concat(item));\r\n        const val = key+1;\r\n        setKey(val);\r\n    }\r\n    const handleSecurityName = (event: React.ChangeEvent<{ value: unknown}>) =>{\r\n        const name = event.target.value as string;\r\n        setSecurityName(name)\r\n        console.log(name);\r\n      }\r\n      const updateItem = (item:any) =>{\r\n        const copyItemList = ruleList.map((val:any)=>{\r\n          if(val.key === item.key){\r\n            val=item;\r\n          }\r\n          return val;\r\n        })\r\n        setRuleList(copyItemList); \r\n      }\r\n    return(\r\n        <div>\r\n            <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                New Security Group\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField id=\"standard-basic\" label=\"\" value= {securityName} onChange={handleSecurityName}/>\r\n            </Grid>\r\n                <Grid item xs={12}>\r\n                <div className={classes.root}>\r\n                    {ruleList.map((val:any)  => <ConfigureSecurityItem key={val.key} item={val} updateItem ={updateItem}/>)}\r\n                    <Button variant=\"contained\" color=\"primary\" onClick= {addNewStorageItem}>\r\n                        Add Rule\r\n                    </Button>\r\n                </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\amarm\\Desktop\\hvc-configurer\\src\\body\\review\\ReviewStorage.tsx",["195","196","197"],"import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }),\r\n);\r\nfunction GridHeader(){\r\n    return (<><Grid item xs={2}>\r\n           <p>type</p>\r\n        </Grid><Grid item xs={2}>\r\n            <p>Volume</p>\r\n        </Grid><Grid item xs={2}>\r\n            <p>Capacity</p>\r\n        </Grid><Grid item xs={1}>\r\n            <p>Encryption</p>\r\n        </Grid><Grid item xs={2}>\r\n            <p>IOPS</p>\r\n        </Grid><Grid item xs={1}>\r\n            <p>Backup Required</p>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n            <p>Remarks</p>\r\n        </Grid></>\r\n    )\r\n}\r\nexport default function  StoraageItem(props:any){\r\n\r\n    const classes = useStyles();\r\n    const{storage} = props;\r\n    return (\r\n        <Grid container spacing={3}>\r\n\r\n          \r\n            {GridHeader()}\r\n            <Grid item xs={2}>\r\n              \r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\"></InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={storage.type}\r\n              >\r\n                <MenuItem value={storage.type}>{storage.type}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <p>{storage.volume}</p>\r\n            </Grid><Grid item xs={2}>\r\n                <TextField id=\"standard-disabled\" label=\"\" value= {storage.capacity} />\r\n            </Grid><Grid item xs={1}>\r\n              <Checkbox\r\n                checked={storage.encryption}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n            </Grid><Grid item xs={2}>\r\n                <p>{storage.iops}</p>\r\n            </Grid><Grid item xs={1}>\r\n              <Checkbox\r\n                checked={storage.backup}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField id=\"standard-disabled\" label=\"rating\" value= {storage.remark}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Divider/>\r\n            </Grid>\r\n            <hr/>    \r\n        </Grid>\r\n    );\r\n}\r\n",{"ruleId":"198","severity":1,"message":"199","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":26},{"ruleId":"198","severity":1,"message":"202","line":1,"column":27,"nodeType":"200","messageId":"201","endLine":1,"endColumn":35},{"ruleId":"198","severity":1,"message":"203","line":1,"column":36,"nodeType":"200","messageId":"201","endLine":1,"endColumn":42},{"ruleId":"204","severity":1,"message":"205","line":23,"column":16,"nodeType":"206","messageId":"207","endLine":23,"endColumn":31},{"ruleId":"208","severity":1,"message":"209","line":33,"column":32,"nodeType":"210","messageId":"211","endLine":33,"endColumn":35,"suggestions":"212"},{"ruleId":"208","severity":1,"message":"209","line":33,"column":40,"nodeType":"210","messageId":"211","endLine":33,"endColumn":43,"suggestions":"213"},{"ruleId":"208","severity":1,"message":"209","line":36,"column":30,"nodeType":"210","messageId":"211","endLine":36,"endColumn":33,"suggestions":"214"},{"ruleId":"208","severity":1,"message":"209","line":37,"column":49,"nodeType":"210","messageId":"211","endLine":37,"endColumn":52,"suggestions":"215"},{"ruleId":"208","severity":1,"message":"209","line":75,"column":35,"nodeType":"210","messageId":"211","endLine":75,"endColumn":38,"suggestions":"216"},{"ruleId":"208","severity":1,"message":"209","line":82,"column":26,"nodeType":"210","messageId":"211","endLine":82,"endColumn":29,"suggestions":"217"},{"ruleId":"204","severity":1,"message":"205","line":89,"column":16,"nodeType":"206","messageId":"207","endLine":89,"endColumn":48},{"ruleId":"204","severity":1,"message":"218","line":89,"column":38,"nodeType":"200","messageId":"219","endLine":89,"endColumn":47},{"ruleId":"208","severity":1,"message":"209","line":89,"column":44,"nodeType":"210","messageId":"211","endLine":89,"endColumn":47,"suggestions":"220"},{"ruleId":"204","severity":1,"message":"205","line":18,"column":16,"nodeType":"206","messageId":"207","endLine":18,"endColumn":43},{"ruleId":"204","severity":1,"message":"218","line":18,"column":33,"nodeType":"200","messageId":"219","endLine":18,"endColumn":42},{"ruleId":"208","severity":1,"message":"209","line":18,"column":39,"nodeType":"210","messageId":"211","endLine":18,"endColumn":42,"suggestions":"221"},{"ruleId":"198","severity":1,"message":"222","line":22,"column":32,"nodeType":"200","messageId":"201","endLine":22,"endColumn":41},{"ruleId":"208","severity":1,"message":"209","line":22,"column":38,"nodeType":"210","messageId":"211","endLine":22,"endColumn":41,"suggestions":"223"},{"ruleId":"208","severity":1,"message":"209","line":28,"column":30,"nodeType":"210","messageId":"211","endLine":28,"endColumn":33,"suggestions":"224"},{"ruleId":"208","severity":1,"message":"209","line":29,"column":46,"nodeType":"210","messageId":"211","endLine":29,"endColumn":49,"suggestions":"225"},{"ruleId":"208","severity":1,"message":"209","line":47,"column":37,"nodeType":"210","messageId":"211","endLine":47,"endColumn":40,"suggestions":"226"},{"ruleId":"204","severity":1,"message":"205","line":13,"column":16,"nodeType":"206","messageId":"207","endLine":13,"endColumn":42},{"ruleId":"204","severity":1,"message":"218","line":13,"column":32,"nodeType":"200","messageId":"219","endLine":13,"endColumn":41},{"ruleId":"208","severity":1,"message":"209","line":13,"column":38,"nodeType":"210","messageId":"211","endLine":13,"endColumn":41,"suggestions":"227"},{"ruleId":"198","severity":1,"message":"222","line":21,"column":87,"nodeType":"200","messageId":"201","endLine":21,"endColumn":92},{"ruleId":"198","severity":1,"message":"222","line":48,"column":87,"nodeType":"200","messageId":"201","endLine":48,"endColumn":92},{"ruleId":"198","severity":1,"message":"222","line":74,"column":87,"nodeType":"200","messageId":"201","endLine":74,"endColumn":92},{"ruleId":"198","severity":1,"message":"222","line":87,"column":87,"nodeType":"200","messageId":"201","endLine":87,"endColumn":92},{"ruleId":"208","severity":1,"message":"209","line":93,"column":33,"nodeType":"210","messageId":"211","endLine":93,"endColumn":36,"suggestions":"228"},{"ruleId":"198","severity":1,"message":"222","line":96,"column":87,"nodeType":"200","messageId":"201","endLine":96,"endColumn":92},{"ruleId":"208","severity":1,"message":"209","line":101,"column":33,"nodeType":"210","messageId":"211","endLine":101,"endColumn":36,"suggestions":"229"},{"ruleId":"204","severity":1,"message":"205","line":31,"column":16,"nodeType":"206","messageId":"207","endLine":31,"endColumn":45},{"ruleId":"204","severity":1,"message":"218","line":31,"column":35,"nodeType":"200","messageId":"219","endLine":31,"endColumn":44},{"ruleId":"208","severity":1,"message":"209","line":31,"column":41,"nodeType":"210","messageId":"211","endLine":31,"endColumn":44,"suggestions":"230"},{"ruleId":"204","severity":1,"message":"205","line":26,"column":16,"nodeType":"206","messageId":"207","endLine":26,"endColumn":52},{"ruleId":"204","severity":1,"message":"218","line":26,"column":42,"nodeType":"200","messageId":"219","endLine":26,"endColumn":51},{"ruleId":"208","severity":1,"message":"209","line":26,"column":48,"nodeType":"210","messageId":"211","endLine":26,"endColumn":51,"suggestions":"231"},{"ruleId":"198","severity":1,"message":"232","line":28,"column":11,"nodeType":"200","messageId":"201","endLine":28,"endColumn":23},{"ruleId":"198","severity":1,"message":"233","line":28,"column":40,"nodeType":"200","messageId":"201","endLine":28,"endColumn":48},{"ruleId":"204","severity":1,"message":"205","line":48,"column":16,"nodeType":"206","messageId":"207","endLine":48,"endColumn":50},{"ruleId":"204","severity":1,"message":"218","line":48,"column":40,"nodeType":"200","messageId":"219","endLine":48,"endColumn":49},{"ruleId":"208","severity":1,"message":"209","line":48,"column":46,"nodeType":"210","messageId":"211","endLine":48,"endColumn":49,"suggestions":"234"},{"ruleId":"204","severity":1,"message":"205","line":47,"column":16,"nodeType":"206","messageId":"207","endLine":47,"endColumn":57},{"ruleId":"204","severity":1,"message":"218","line":47,"column":47,"nodeType":"200","messageId":"219","endLine":47,"endColumn":56},{"ruleId":"208","severity":1,"message":"209","line":47,"column":53,"nodeType":"210","messageId":"211","endLine":47,"endColumn":56,"suggestions":"235"},{"ruleId":"204","severity":1,"message":"205","line":17,"column":16,"nodeType":"206","messageId":"207","endLine":17,"endColumn":33},{"ruleId":"204","severity":1,"message":"205","line":59,"column":16,"nodeType":"206","messageId":"207","endLine":59,"endColumn":41},{"ruleId":"204","severity":1,"message":"218","line":59,"column":31,"nodeType":"200","messageId":"219","endLine":59,"endColumn":40},{"ruleId":"208","severity":1,"message":"209","line":59,"column":37,"nodeType":"210","messageId":"211","endLine":59,"endColumn":40,"suggestions":"236"},{"ruleId":"208","severity":1,"message":"209","line":16,"column":10,"nodeType":"210","messageId":"211","endLine":16,"endColumn":13,"suggestions":"237"},{"ruleId":"208","severity":1,"message":"209","line":17,"column":10,"nodeType":"210","messageId":"211","endLine":17,"endColumn":13,"suggestions":"238"},{"ruleId":"208","severity":1,"message":"209","line":40,"column":27,"nodeType":"210","messageId":"211","endLine":40,"endColumn":30,"suggestions":"239"},{"ruleId":"204","severity":1,"message":"205","line":55,"column":16,"nodeType":"206","messageId":"207","endLine":55,"endColumn":44},{"ruleId":"204","severity":1,"message":"218","line":55,"column":34,"nodeType":"200","messageId":"219","endLine":55,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":55,"column":40,"nodeType":"210","messageId":"211","endLine":55,"endColumn":43,"suggestions":"240"},{"ruleId":"208","severity":1,"message":"209","line":65,"column":32,"nodeType":"210","messageId":"211","endLine":65,"endColumn":35,"suggestions":"241"},{"ruleId":"204","severity":1,"message":"205","line":21,"column":16,"nodeType":"206","messageId":"207","endLine":21,"endColumn":46},{"ruleId":"204","severity":1,"message":"218","line":21,"column":36,"nodeType":"200","messageId":"219","endLine":21,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":21,"column":42,"nodeType":"210","messageId":"211","endLine":21,"endColumn":45,"suggestions":"242"},{"ruleId":"208","severity":1,"message":"209","line":29,"column":33,"nodeType":"210","messageId":"211","endLine":29,"endColumn":36,"suggestions":"243"},{"ruleId":"208","severity":1,"message":"209","line":13,"column":10,"nodeType":"210","messageId":"211","endLine":13,"endColumn":13,"suggestions":"244"},{"ruleId":"208","severity":1,"message":"209","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":13,"suggestions":"245"},{"ruleId":"208","severity":1,"message":"209","line":36,"column":27,"nodeType":"210","messageId":"211","endLine":36,"endColumn":30,"suggestions":"246"},{"ruleId":"204","severity":1,"message":"205","line":66,"column":16,"nodeType":"206","messageId":"207","endLine":66,"endColumn":44},{"ruleId":"204","severity":1,"message":"218","line":66,"column":34,"nodeType":"200","messageId":"219","endLine":66,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":66,"column":40,"nodeType":"210","messageId":"211","endLine":66,"endColumn":43,"suggestions":"247"},{"ruleId":"208","severity":1,"message":"209","line":73,"column":34,"nodeType":"210","messageId":"211","endLine":73,"endColumn":37,"suggestions":"248"},{"ruleId":"204","severity":1,"message":"205","line":11,"column":16,"nodeType":"206","messageId":"207","endLine":11,"endColumn":53},{"ruleId":"204","severity":1,"message":"218","line":11,"column":43,"nodeType":"200","messageId":"219","endLine":11,"endColumn":52},{"ruleId":"208","severity":1,"message":"209","line":11,"column":49,"nodeType":"210","messageId":"211","endLine":11,"endColumn":52,"suggestions":"249"},{"ruleId":"198","severity":1,"message":"250","line":12,"column":7,"nodeType":"200","messageId":"201","endLine":12,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":24,"column":16,"nodeType":"206","messageId":"207","endLine":24,"endColumn":44},{"ruleId":"204","severity":1,"message":"218","line":24,"column":34,"nodeType":"200","messageId":"219","endLine":24,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":24,"column":40,"nodeType":"210","messageId":"211","endLine":24,"endColumn":43,"suggestions":"251"},{"ruleId":"204","severity":1,"message":"205","line":62,"column":16,"nodeType":"206","messageId":"207","endLine":62,"endColumn":49},{"ruleId":"204","severity":1,"message":"218","line":62,"column":39,"nodeType":"200","messageId":"219","endLine":62,"endColumn":48},{"ruleId":"208","severity":1,"message":"209","line":62,"column":45,"nodeType":"210","messageId":"211","endLine":62,"endColumn":48,"suggestions":"252"},{"ruleId":"198","severity":1,"message":"222","line":67,"column":30,"nodeType":"200","messageId":"201","endLine":67,"endColumn":39},{"ruleId":"208","severity":1,"message":"209","line":67,"column":36,"nodeType":"210","messageId":"211","endLine":67,"endColumn":39,"suggestions":"253"},{"ruleId":"204","severity":1,"message":"205","line":31,"column":16,"nodeType":"206","messageId":"207","endLine":31,"endColumn":54},{"ruleId":"204","severity":1,"message":"218","line":31,"column":44,"nodeType":"200","messageId":"219","endLine":31,"endColumn":53},{"ruleId":"208","severity":1,"message":"209","line":31,"column":50,"nodeType":"210","messageId":"211","endLine":31,"endColumn":53,"suggestions":"254"},{"ruleId":"208","severity":1,"message":"209","line":63,"column":43,"nodeType":"210","messageId":"211","endLine":63,"endColumn":46,"suggestions":"255"},{"ruleId":"208","severity":1,"message":"209","line":79,"column":46,"nodeType":"210","messageId":"211","endLine":79,"endColumn":49,"suggestions":"256"},{"ruleId":"204","severity":1,"message":"205","line":17,"column":16,"nodeType":"206","messageId":"207","endLine":17,"endColumn":50},{"ruleId":"204","severity":1,"message":"218","line":17,"column":40,"nodeType":"200","messageId":"219","endLine":17,"endColumn":49},{"ruleId":"208","severity":1,"message":"209","line":17,"column":46,"nodeType":"210","messageId":"211","endLine":17,"endColumn":49,"suggestions":"257"},{"ruleId":"198","severity":1,"message":"222","line":21,"column":32,"nodeType":"200","messageId":"201","endLine":21,"endColumn":41},{"ruleId":"208","severity":1,"message":"209","line":21,"column":38,"nodeType":"210","messageId":"211","endLine":21,"endColumn":41,"suggestions":"258"},{"ruleId":"208","severity":1,"message":"209","line":32,"column":32,"nodeType":"210","messageId":"211","endLine":32,"endColumn":35,"suggestions":"259"},{"ruleId":"208","severity":1,"message":"209","line":33,"column":48,"nodeType":"210","messageId":"211","endLine":33,"endColumn":51,"suggestions":"260"},{"ruleId":"208","severity":1,"message":"209","line":52,"column":40,"nodeType":"210","messageId":"211","endLine":52,"endColumn":43,"suggestions":"261"},{"ruleId":"204","severity":1,"message":"205","line":54,"column":16,"nodeType":"206","messageId":"207","endLine":54,"endColumn":49},{"ruleId":"204","severity":1,"message":"218","line":54,"column":39,"nodeType":"200","messageId":"219","endLine":54,"endColumn":48},{"ruleId":"208","severity":1,"message":"209","line":54,"column":45,"nodeType":"210","messageId":"211","endLine":54,"endColumn":48,"suggestions":"262"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["263","264"],["265","266"],["267","268"],["269","270"],["271","272"],["273","274"],"Argument 'props' should be typed with a non-any type.","anyTypedArg",["275","276"],["277","278"],"'event' is defined but never used.",["279","280"],["281","282"],["283","284"],["285","286"],["287","288"],["289","290"],["291","292"],["293","294"],["295","296"],"'securityName' is assigned a value but never used.","'ruleList' is assigned a value but never used.",["297","298"],["299","300"],["301","302"],["303","304"],["305","306"],["307","308"],["309","310"],["311","312"],["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],"'useStyles' is assigned a value but never used.",["329","330"],["331","332"],["333","334"],["335","336"],["337","338"],["339","340"],["341","342"],["343","344"],["345","346"],["347","348"],["349","350"],["351","352"],{"messageId":"353","fix":"354","desc":"355"},{"messageId":"356","fix":"357","desc":"358"},{"messageId":"353","fix":"359","desc":"355"},{"messageId":"356","fix":"360","desc":"358"},{"messageId":"353","fix":"361","desc":"355"},{"messageId":"356","fix":"362","desc":"358"},{"messageId":"353","fix":"363","desc":"355"},{"messageId":"356","fix":"364","desc":"358"},{"messageId":"353","fix":"365","desc":"355"},{"messageId":"356","fix":"366","desc":"358"},{"messageId":"353","fix":"367","desc":"355"},{"messageId":"356","fix":"368","desc":"358"},{"messageId":"353","fix":"369","desc":"355"},{"messageId":"356","fix":"370","desc":"358"},{"messageId":"353","fix":"371","desc":"355"},{"messageId":"356","fix":"372","desc":"358"},{"messageId":"353","fix":"373","desc":"355"},{"messageId":"356","fix":"374","desc":"358"},{"messageId":"353","fix":"375","desc":"355"},{"messageId":"356","fix":"376","desc":"358"},{"messageId":"353","fix":"377","desc":"355"},{"messageId":"356","fix":"378","desc":"358"},{"messageId":"353","fix":"379","desc":"355"},{"messageId":"356","fix":"380","desc":"358"},{"messageId":"353","fix":"381","desc":"355"},{"messageId":"356","fix":"382","desc":"358"},{"messageId":"353","fix":"383","desc":"355"},{"messageId":"356","fix":"384","desc":"358"},{"messageId":"353","fix":"385","desc":"355"},{"messageId":"356","fix":"386","desc":"358"},{"messageId":"353","fix":"387","desc":"355"},{"messageId":"356","fix":"388","desc":"358"},{"messageId":"353","fix":"389","desc":"355"},{"messageId":"356","fix":"390","desc":"358"},{"messageId":"353","fix":"391","desc":"355"},{"messageId":"356","fix":"392","desc":"358"},{"messageId":"353","fix":"393","desc":"355"},{"messageId":"356","fix":"394","desc":"358"},{"messageId":"353","fix":"395","desc":"355"},{"messageId":"356","fix":"396","desc":"358"},{"messageId":"353","fix":"397","desc":"355"},{"messageId":"356","fix":"398","desc":"358"},{"messageId":"353","fix":"399","desc":"355"},{"messageId":"356","fix":"400","desc":"358"},{"messageId":"353","fix":"401","desc":"355"},{"messageId":"356","fix":"402","desc":"358"},{"messageId":"353","fix":"403","desc":"355"},{"messageId":"356","fix":"404","desc":"358"},{"messageId":"353","fix":"405","desc":"355"},{"messageId":"356","fix":"406","desc":"358"},{"messageId":"353","fix":"407","desc":"355"},{"messageId":"356","fix":"408","desc":"358"},{"messageId":"353","fix":"409","desc":"355"},{"messageId":"356","fix":"410","desc":"358"},{"messageId":"353","fix":"411","desc":"355"},{"messageId":"356","fix":"412","desc":"358"},{"messageId":"353","fix":"413","desc":"355"},{"messageId":"356","fix":"414","desc":"358"},{"messageId":"353","fix":"415","desc":"355"},{"messageId":"356","fix":"416","desc":"358"},{"messageId":"353","fix":"417","desc":"355"},{"messageId":"356","fix":"418","desc":"358"},{"messageId":"353","fix":"419","desc":"355"},{"messageId":"356","fix":"420","desc":"358"},{"messageId":"353","fix":"421","desc":"355"},{"messageId":"356","fix":"422","desc":"358"},{"messageId":"353","fix":"423","desc":"355"},{"messageId":"356","fix":"424","desc":"358"},{"messageId":"353","fix":"425","desc":"355"},{"messageId":"356","fix":"426","desc":"358"},{"messageId":"353","fix":"427","desc":"355"},{"messageId":"356","fix":"428","desc":"358"},{"messageId":"353","fix":"429","desc":"355"},{"messageId":"356","fix":"430","desc":"358"},{"messageId":"353","fix":"431","desc":"355"},{"messageId":"356","fix":"432","desc":"358"},{"messageId":"353","fix":"433","desc":"355"},{"messageId":"356","fix":"434","desc":"358"},{"messageId":"353","fix":"435","desc":"355"},{"messageId":"356","fix":"436","desc":"358"},{"messageId":"353","fix":"437","desc":"355"},{"messageId":"356","fix":"438","desc":"358"},{"messageId":"353","fix":"439","desc":"355"},{"messageId":"356","fix":"440","desc":"358"},{"messageId":"353","fix":"441","desc":"355"},{"messageId":"356","fix":"442","desc":"358"},{"messageId":"353","fix":"443","desc":"355"},{"messageId":"356","fix":"444","desc":"358"},{"messageId":"353","fix":"445","desc":"355"},{"messageId":"356","fix":"446","desc":"358"},"suggestUnknown",{"range":"447","text":"448"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"447","text":"449"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"450","text":"448"},{"range":"450","text":"449"},{"range":"451","text":"448"},{"range":"451","text":"449"},{"range":"452","text":"448"},{"range":"452","text":"449"},{"range":"453","text":"448"},{"range":"453","text":"449"},{"range":"454","text":"448"},{"range":"454","text":"449"},{"range":"455","text":"448"},{"range":"455","text":"449"},{"range":"456","text":"448"},{"range":"456","text":"449"},{"range":"457","text":"448"},{"range":"457","text":"449"},{"range":"458","text":"448"},{"range":"458","text":"449"},{"range":"459","text":"448"},{"range":"459","text":"449"},{"range":"460","text":"448"},{"range":"460","text":"449"},{"range":"461","text":"448"},{"range":"461","text":"449"},{"range":"462","text":"448"},{"range":"462","text":"449"},{"range":"463","text":"448"},{"range":"463","text":"449"},{"range":"464","text":"448"},{"range":"464","text":"449"},{"range":"465","text":"448"},{"range":"465","text":"449"},{"range":"466","text":"448"},{"range":"466","text":"449"},{"range":"467","text":"448"},{"range":"467","text":"449"},{"range":"468","text":"448"},{"range":"468","text":"449"},{"range":"469","text":"448"},{"range":"469","text":"449"},{"range":"470","text":"448"},{"range":"470","text":"449"},{"range":"471","text":"448"},{"range":"471","text":"449"},{"range":"472","text":"448"},{"range":"472","text":"449"},{"range":"473","text":"448"},{"range":"473","text":"449"},{"range":"474","text":"448"},{"range":"474","text":"449"},{"range":"475","text":"448"},{"range":"475","text":"449"},{"range":"476","text":"448"},{"range":"476","text":"449"},{"range":"477","text":"448"},{"range":"477","text":"449"},{"range":"478","text":"448"},{"range":"478","text":"449"},{"range":"479","text":"448"},{"range":"479","text":"449"},{"range":"480","text":"448"},{"range":"480","text":"449"},{"range":"481","text":"448"},{"range":"481","text":"449"},{"range":"482","text":"448"},{"range":"482","text":"449"},{"range":"483","text":"448"},{"range":"483","text":"449"},{"range":"484","text":"448"},{"range":"484","text":"449"},{"range":"485","text":"448"},{"range":"485","text":"449"},{"range":"486","text":"448"},{"range":"486","text":"449"},{"range":"487","text":"448"},{"range":"487","text":"449"},{"range":"488","text":"448"},{"range":"488","text":"449"},{"range":"489","text":"448"},{"range":"489","text":"449"},{"range":"490","text":"448"},{"range":"490","text":"449"},{"range":"491","text":"448"},{"range":"491","text":"449"},{"range":"492","text":"448"},{"range":"492","text":"449"},{"range":"493","text":"448"},{"range":"493","text":"449"},[1458,1461],"unknown","never",[1466,1469],[1540,1543],[1598,1601],[1665,1668],[1963,1966],[2129,2132],[479,482],[689,692],[961,964],[1016,1019],[1467,1470],[639,642],[3855,3858],[4286,4289],[620,623],[1487,1490],[1400,1403],[1357,1360],[1841,1844],[640,643],[655,658],[1146,1149],[1486,1489],[1971,1974],[475,478],[764,767],[442,445],[457,460],[946,949],[1628,1631],[1919,1922],[504,507],[827,830],[1762,1765],[1947,1950],[825,828],[2123,2126],[2795,2798],[521,524],[714,717],[1136,1139],[1193,1196],[1803,1806],[1565,1568]]